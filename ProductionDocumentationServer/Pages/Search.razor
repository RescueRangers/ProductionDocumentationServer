@page "/search/"

@using ProductionDocumentationServer.Data
@using ProductionDocumentationServer.Data.Repositories
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids

@inject IProductionReportsRepository _reportsRepo
@inject NavigationManager _navManager

    <PageTitle Title="Search"></PageTitle>

<h3>Search</h3>

<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text" aria-hidden="true">
            <i class="oi oi-magnifying-glass"></i>
        </span>
    </div>
    <input class="form-control" @bind-value="_searchTerm" type="text" placeholder="Search" aria-label="Search" />
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" onclick="@PerformSearch()">Search</button>
    </div>
</div>

<p class="text-muted">@_message</p>

<SfGrid AllowTextWrap="false" TValue="ProductionReport" DataSource="Reports" ID="Grid" @ref="Grid" AllowPaging="true" AllowResizing="true" AllowSelection="true"
        AllowSorting="true">
    <GridSearchSettings IgnoreAccent="true" IgnoreCase="true"></GridSearchSettings>
    <GridEvents CommandClicked="OnCommandClicked" TValue="ProductionReport"></GridEvents>
    <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
    <GridSelectionSettings Type="SelectionType.Single"></GridSelectionSettings>
    <GridEvents OnToolbarClick="ToolbarClick" TValue="ProductionReport"></GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(ProductionReport.Id)" HeaderText="Id" IsPrimaryKey="false" Visible="false" IsIdentity="true"></GridColumn>
        <GridColumn Field=@nameof(ProductionReport.Date) HeaderText="Date" AllowEditing="false" Format="d" Type="ColumnType.Date" Width="80"></GridColumn>
        <GridColumn Field=@nameof(ProductionReport.MaterialDate) HeaderText="Material date" AllowEditing="false" Format="d" Type="ColumnType.Date" Width="80"></GridColumn>
        <GridColumn Field=@nameof(ProductionReport.TimeCode) HeaderText="Time code" Width="80"></GridColumn>
        <GridColumn Field=@nameof(ProductionReport.ItemNumber) HeaderText="Item number" AllowEditing="false" Width="80"></GridColumn>
        <GridColumn Field=@nameof(ProductionReport.ItemName) HeaderText="Item name" AllowEditing="false" Width="80"></GridColumn>
        <GridColumn HeaderText=" " Width="180" TextAlign="TextAlign.Center">
            <GridCommandColumns>
                <GridCommandColumn ButtonOption="@(new CommandButtonOptions() { Content = "Open" })"></GridCommandColumn>
                @*<GridCommandColumn ButtonOption="@(new CommandButtonOptions() { Content = "Open order" })"></GridCommandColumn>*@
            </GridCommandColumns>
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
    public List<ProductionReport> Reports { get; set; } = new List<ProductionReport>();
    SfGrid<ProductionReport> Grid;
    private string _searchTerm;
    private string _message = "Search through the reports database...";

    public void ToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_pdfexport")
        {
            this.Grid.PdfExport();
        }
        if (args.Item.Id == "Grid_excelexport")
        {
            this.Grid.ExcelExport();
        }
        if (args.Item.Id == "Grid_csvexport")
        {
            this.Grid.CsvExport();
        }
    }

    public async Task PerformSearch()
    {
        if (string.IsNullOrWhiteSpace(_searchTerm)) return;

        var reports = await _reportsRepo.SearchReports(_searchTerm);
        Reports = reports.ToList();

        _message = $"Search found {Reports.Count} elements";

        StateHasChanged();
    }

    public void OnCommandClicked(CommandClickEventArgs<ProductionReport> args)
    {
        if (args.CommandColumn.ButtonOption.Content == "Open")
        {
            _navManager.NavigateTo($"/report/{args.RowData.Id}");
        }
        else
        {
            _navManager.NavigateTo($"/reports/{args.RowData.OrderId}");
        }
    }

}