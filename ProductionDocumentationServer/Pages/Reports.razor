@page "/reports"

@using ProductionDocumentationServer.Data
@using ProductionDocumentationServer.Data.Repositories
@inject IProductionReportsRepository _reportsRepo

<h3>Reports</h3>

@if (_reports == null)
{
    <div class="progress">
        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
            <span>Please wait<span class="dotdotdot"></span></span>
        </div>
    </div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Date</th>
                <th scope="col">Item number</th>
                <th scope="col">Item Name</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 1; i <= _reports.Count(); i++)
            {
            <tr>
                <th scope="row">@i</th>
                    <td>@_reports[i - 1].Date.ToString("yyyy-MM-dd hh:mm")</td>
                    <td>@_reports[i - 1].ItemNumber</td>
                    <td>@_reports[i - 1].ItemName</td>
                    <td>
                        <a href="/report/@_reports[i-1].Id"><span class="oi oi-eye"></span></a>
                    </td>
            </tr>
            }
        </tbody>
    </table>

}




@code {
    List<ProductionReport> _reports;

    protected override async Task OnInitializedAsync()
    {
        var reports = await _reportsRepo.Get().ConfigureAwait(false);
        _reports = reports.ToList();
    }

}
